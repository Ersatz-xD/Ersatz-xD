name: Update README with Project Spotlight and Fun Fact
on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC
  workflow_dispatch: # Manual run option

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          
      - name: Install dependencies
        run: pip install requests
          
      - name: Update README
        run: |
          python3 << 'EOF'
          import json, random, re, requests
          
          # Load projects
          with open("projects.json", "r", encoding="utf-8") as f:
              projects = json.load(f)
          project = random.choice(projects)
          
          # Define badge colors and icons for different technologies
          badge_styles = {
              # Programming Languages
              "Python": {"color": "3776ab", "logo": "python"},
              "JavaScript": {"color": "f7df1e", "logo": "javascript"},
              "C++": {"color": "00599c", "logo": "cplusplus"},
              "TypeScript": {"color": "3178c6", "logo": "typescript"},
              
              # Frontend Technologies
              "React": {"color": "61dafb", "logo": "react"},
              "HTML": {"color": "e34f26", "logo": "html5"},
              "CSS": {"color": "1572b6", "logo": "css3"},
              "Vite": {"color": "646cff", "logo": "vite"},
              
              # Backend Technologies
              "Node.js": {"color": "339933", "logo": "nodedotjs"},
              "Express": {"color": "000000", "logo": "express"},
              
              # Databases
              "MongoDB": {"color": "47a248", "logo": "mongodb"},
              "MySQL": {"color": "4479a1", "logo": "mysql"},
              
              # APIs and Services
              "Gemini API": {"color": "ea4335", "logo": "google"},
              "JWT": {"color": "000000", "logo": "jsonwebtokens"},
              
              # UI/Desktop
              "PyQt": {"color": "41cd52", "logo": "qt"},
              
              # Deployment/Hosting
              "GitHub Pages": {"color": "222222", "logo": "githubpages"},
              
              # AI/ML
              "Machine Learning": {"color": "ff6f00", "logo": "tensorflow"},
              "Gemini AI": {"color": "ea4335", "logo": "google"},
              
              # General
              "API": {"color": "009688", "logo": "fastapi"},
              "Authentication": {"color": "000000", "logo": "auth0"}
          }
          
          # Generate dynamic badges based on project tech_stack
          project_badges = ""
          if "tech_stack" in project and project["tech_stack"]:
              for tech in project["tech_stack"]:
                  style = badge_styles.get(tech, {"color": "6c757d", "logo": "generic"})
                  # Replace spaces with %20 for URL encoding and handle special characters
                  tech_encoded = tech.replace(" ", "%20").replace("+", "%2B")
                  project_badges += f'<img src="https://img.shields.io/badge/{tech_encoded}-{style["color"]}?style=flat-square&logo={style["logo"]}&logoColor=white" alt="{tech}"/>'
                  project_badges += "\n"
          
          # Create project spotlight HTML content
          project_content = "\n<table>\n<tr>\n<td align=\"center\" width=\"100%\">\n"
          project_content += "<img src=\"https://img.shields.io/badge/Featured%20Project-2ea043?style=for-the-badge&logo=github&logoColor=white\" alt=\"Featured Project\"/>\n"
          project_content += "<br><br>\n"
          project_content += f"<h3><a href=\"{project['url']}\">ðŸš€ {project['name']}</a></h3>\n"
          project_content += f"<p><em>{project['description']}</em></p>\n"
          project_content += project_badges
          project_content += "</td>\n</tr>\n</table>\n"
          
          # Get fun fact from API
          try:
              fact_resp = requests.get("https://uselessfacts.jsph.pl/random.json?language=en", timeout=10)
              fact_text = fact_resp.json().get("text", "No fact available today.")
          except:
              fact_text = "Unable to fetch fun fact today."
          
          # Escape any quotes in the fact text
          fact_text = fact_text.replace('"', '\\"').replace("'", "\\'")
          
          # Create fun fact HTML content
          fact_content = "\n<table>\n<tr>\n<td align=\"center\" width=\"100%\">\n"
          fact_content += "<img src=\"https://img.shields.io/badge/Did%20You%20Know%3F-ff6b6b?style=for-the-badge&logo=lightbulb&logoColor=white\" alt=\"Did You Know\"/>\n"
          fact_content += "<br><br>\n"
          fact_content += "<h3>ðŸŽ² Random Fact!</h3>\n"
          fact_content += f"<p><strong>{fact_text}</strong></p>\n"
          fact_content += "<img src=\"https://img.shields.io/badge/Updated%20Daily-28a745?style=flat-square&logo=clockify&logoColor=white\" alt=\"Updated Daily\"/>\n"
          fact_content += "</td>\n</tr>\n</table>\n"
          
          # Read README
          with open("README.md", "r", encoding="utf-8") as f:
              readme = f.read()
              
          # Replace between tags with new HTML content
          readme = re.sub(
              r"(?<=<!-- PROJECT_SPOTLIGHT_START -->)(.*?)(?=<!-- PROJECT_SPOTLIGHT_END -->)",
              project_content,
              readme,
              flags=re.DOTALL
          )
          readme = re.sub(
              r"(?<=<!-- FUN_FACT_START -->)(.*?)(?=<!-- FUN_FACT_END -->)",
              fact_content,
              readme,
              flags=re.DOTALL
          )
          
          # Save README
          with open("README.md", "w", encoding="utf-8") as f:
              f.write(readme)
          EOF
          
      - name: Set up Git config
        run: |
          git config user.name "Ayaan Ahmed"
          git config user.email "aayan.shazim@gmail.com"
          
      - name: Commit and Push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ¤– Daily update: Project Spotlight & Fun Fact"
            git push
          fi
